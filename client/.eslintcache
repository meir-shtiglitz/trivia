[{"C:\\projects\\react\\trivia\\client\\src\\index.js":"1","C:\\projects\\react\\trivia\\client\\src\\reportWebVitals.js":"2","C:\\projects\\react\\trivia\\client\\src\\App.js":"3","C:\\projects\\react\\trivia\\client\\src\\components\\header.jsx":"4","C:\\projects\\react\\trivia\\client\\src\\components\\register.jsx":"5","C:\\projects\\react\\trivia\\client\\src\\components\\admin.jsx":"6","C:\\projects\\react\\trivia\\client\\src\\components\\PaSocket.jsx":"7","C:\\projects\\react\\trivia\\client\\src\\components\\logame.jsx":"8","C:\\projects\\react\\trivia\\client\\src\\components\\edit.jsx":"9","C:\\projects\\react\\trivia\\client\\src\\components\\questions.jsx":"10","C:\\projects\\react\\trivia\\client\\src\\components\\login.jsx":"11","C:\\projects\\react\\trivia\\client\\src\\components\\copy_questions.jsx":"12","C:\\projects\\react\\trivia\\client\\src\\components\\public_games.jsx":"13","C:\\projects\\react\\trivia\\client\\src\\components\\contact.jsx":"14","C:\\projects\\react\\trivia\\client\\src\\components\\public_confirm.jsx":"15","C:\\projects\\react\\trivia\\client\\src\\components\\profile.jsx":"16","C:\\projects\\react\\trivia\\client\\src\\components\\formEdit.q.js":"17","C:\\projects\\react\\trivia\\client\\src\\components\\theQuestion.js":"18","C:\\projects\\react\\trivia\\client\\src\\components\\Counter.js":"19","C:\\projects\\react\\trivia\\client\\src\\api\\questions.js":"20","C:\\projects\\react\\trivia\\client\\src\\api\\apiEdit.js":"21","C:\\projects\\react\\trivia\\client\\src\\api\\apiAdmin.js":"22","C:\\projects\\react\\trivia\\client\\src\\api\\contact.js":"23","C:\\projects\\react\\trivia\\client\\src\\controlers\\Cedit.js":"24","C:\\projects\\react\\trivia\\client\\src\\controlers\\Cadmin.js":"25","C:\\projects\\react\\trivia\\client\\src\\controlers\\Cquestions.js":"26","C:\\projects\\react\\trivia\\client\\src\\components\\admin.game.jsx":"27","C:\\projects\\react\\trivia\\client\\src\\components\\admin.formGame.jsx":"28","C:\\projects\\react\\trivia\\client\\src\\components\\Socket.jsx":"29","C:\\projects\\react\\trivia\\client\\src\\components\\score.jsx":"30","C:\\projects\\react\\trivia\\client\\src\\components\\inputs.jsx":"31","C:\\projects\\react\\trivia\\client\\src\\controlers\\SAlert.jsx":"32","C:\\projects\\react\\trivia\\client\\src\\api\\apiUrl.js":"33"},{"size":632,"mtime":1612302802060,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":1620,"mtime":1634063729377,"results":"37","hashOfConfig":"35"},{"size":4311,"mtime":1642535545217,"results":"38","hashOfConfig":"35"},{"size":3642,"mtime":1633251346222,"results":"39","hashOfConfig":"35"},{"size":3219,"mtime":1634064361725,"results":"40","hashOfConfig":"35"},{"size":410,"mtime":1620199453584,"results":"41","hashOfConfig":"35"},{"size":2510,"mtime":1619082924992,"results":"42","hashOfConfig":"35"},{"size":2876,"mtime":1634028224535,"results":"43","hashOfConfig":"35"},{"size":5087,"mtime":1632987570346,"results":"44","hashOfConfig":"35"},{"size":3147,"mtime":1619082495144,"results":"45","hashOfConfig":"35"},{"size":1617,"mtime":1620744499584,"results":"46","hashOfConfig":"35"},{"size":2608,"mtime":1642534969481,"results":"47","hashOfConfig":"35"},{"size":2826,"mtime":1634028206142,"results":"48","hashOfConfig":"35"},{"size":3350,"mtime":1642534926687,"results":"49","hashOfConfig":"35"},{"size":4086,"mtime":1620202494505,"results":"50","hashOfConfig":"35"},{"size":2489,"mtime":1634028230219,"results":"51","hashOfConfig":"35"},{"size":1838,"mtime":1622023365931,"results":"52","hashOfConfig":"35"},{"size":1727,"mtime":1634028090307,"results":"53","hashOfConfig":"35"},{"size":3162,"mtime":1642625652699,"results":"54","hashOfConfig":"35"},{"size":2816,"mtime":1642625623696,"results":"55","hashOfConfig":"35"},{"size":3315,"mtime":1642625610262,"results":"56","hashOfConfig":"35"},{"size":860,"mtime":1642625644348,"results":"57","hashOfConfig":"35"},{"size":526,"mtime":1633246936323,"results":"58","hashOfConfig":"35"},{"size":1014,"mtime":1633354462421,"results":"59","hashOfConfig":"35"},{"size":2939,"mtime":1632987582211,"results":"60","hashOfConfig":"35"},{"size":2404,"mtime":1634028188125,"results":"61","hashOfConfig":"35"},{"size":4120,"mtime":1634028178814,"results":"62","hashOfConfig":"35"},{"size":4453,"mtime":1620895086181,"results":"63","hashOfConfig":"35"},{"size":3643,"mtime":1620640904926,"results":"64","hashOfConfig":"35"},{"size":988,"mtime":1633073736618,"results":"65","hashOfConfig":"35"},{"size":532,"mtime":1621422535377,"results":"66","hashOfConfig":"35"},{"size":158,"mtime":1642626703915,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1sxs64t",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\react\\trivia\\client\\src\\index.js",[],["139","140"],"C:\\projects\\react\\trivia\\client\\src\\reportWebVitals.js",[],"C:\\projects\\react\\trivia\\client\\src\\App.js",[],"C:\\projects\\react\\trivia\\client\\src\\components\\header.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\register.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\admin.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\PaSocket.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\logame.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\edit.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\questions.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\login.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\copy_questions.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\public_games.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\contact.jsx",["141","142","143"],"import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport \"./contact.css\"\r\nimport { apiUrl } from \"../config.json\";\r\nimport { sendMailContact } from \"../api/contact\";\r\n\r\nclass Contact extends Component {\r\n    state = { name: '', email: '', subject: '', msg: '', status: '' }\r\n\r\n    inputer = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    updateState = (data) => {\r\n        this.setState({ ...data })\r\n    }\r\n\r\n    send = () => {\r\n        sendMailContact(this.state, this.updateState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <div className=\"row text-center mt-5\">\r\n                    <div className=\"col-sm-5 card p-3 m-auto\">\r\n                        <form className=\"text-right contact_form\">\r\n                            <h2 className=\"text-center\"> כתבו לנו</h2>\r\n                            <div className=\"grey-text\">\r\n                                <label>שם:\r\n                                    <MDBInput onInput={this.inputer} name=\"name\" icon=\"user\" group type=\"text\" value={this.state.name} validate error=\"wrong\"\r\n                                        success=\"right\" />\r\n                                </label>\r\n                                <label>כתובת מייל:\r\n                                    <MDBInput onInput={this.inputer} name=\"email\" value={this.state.email} icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n                                        success=\"right\" />\r\n                                </label>\r\n                                <label>נושא:\r\n                                    <MDBInput onInput={this.inputer} name=\"subject\" value={this.state.subject} icon=\"tag\" group type=\"text\" validate error=\"wrong\" success=\"right\" />\r\n                                </label>\r\n                                <label>תוכן ההודעה:\r\n                                    <MDBInput onInput={this.inputer} name=\"msg\" value={this.state.msg} type=\"textarea\" rows=\"3\" icon=\"pencil-alt\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <MDBBtn onClick={this.send} color=\"secondary\" className=\"col-sm-5\">\r\n                                    <span>  שלח  </span>\r\n                                    <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" />\r\n                                </MDBBtn>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\nexport default Contact;\r\n\r\n// total rows before fixing 104","C:\\projects\\react\\trivia\\client\\src\\components\\public_confirm.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\profile.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\formEdit.q.js",[],"C:\\projects\\react\\trivia\\client\\src\\components\\theQuestion.js",[],"C:\\projects\\react\\trivia\\client\\src\\components\\Counter.js",[],"C:\\projects\\react\\trivia\\client\\src\\api\\questions.js",[],"C:\\projects\\react\\trivia\\client\\src\\api\\apiEdit.js",[],"C:\\projects\\react\\trivia\\client\\src\\api\\apiAdmin.js",["144"],"import axios from \"axios\";\r\nimport swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ApiUrl } from \"./apiUrl\";\r\n\r\nexport const getAdminGames = (updateState) => {\r\n    let user = localStorage.getItem(\"user\");\r\n    if (!user) return window.location = \"/login\";\r\n\r\n    user = jwt_decode(user);\r\n    axios.get(`${ApiUrl}/games/get`, {\r\n        params: {\r\n            id: user.id\r\n        }\r\n    })\r\n        .then(res => {\r\n            console.log('res from admin api', res);\r\n            if (res.data.length > 0) {\r\n                updateState({ id: user.id, games: res.data[0].games, loading: '' });\r\n            }\r\n        })\r\n}\r\n\r\nexport const saveGame = (state, updateState) => {\r\n    const { id, name_game, password, status, time, live } = state;\r\n    var data = {\r\n        params: {\r\n            id, password, status, time,\r\n            name: name_game,\r\n            live: (live === true),\r\n            action: 'user'\r\n\r\n        }\r\n    };\r\n    console.log(data);\r\n    axios.get(`${ApiUrl}/game/new`, data, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        withCredentials: true\r\n    })\r\n        .then(function (res) {\r\n            updateState({ games: res.data.games, displayForm: false });\r\n            // if(res.data.result == 3){\r\n            //     self.setState({status:'שם משחק כזה כבר קיים במערכת נסה שם אחר'});\r\n            // } else{\r\n            //     var user = {id: callback._id, name: details.name, email: details.email, phone: details.phone, password: details.password};\r\n            //      user = JSON.stringify(user);\r\n            //     console.log(user);\r\n            //     localStorage.setItem(\"user\", user);\r\n            //     self.props.history.push('/');\r\n            // }\r\n        })\r\n}\r\nexport const updateGame = (state, to_update, updateState) => {\r\n    let { games, name_game, password, status, time, live } = state;\r\n    axios.get(`${ApiUrl}/game/update`, {\r\n        params: {\r\n            gameId: games[to_update]._id,\r\n            name: name_game,\r\n            password, status, live, time,\r\n            action: 'user'\r\n        }\r\n    })\r\n        .then(res => {\r\n            games[to_update].name = name_game;\r\n            games[to_update].password = password;\r\n            if (status === 'public') status = 'waiting';\r\n            games[to_update].status = status;\r\n            games[to_update].live = live;\r\n            games[to_update].time = time;\r\n            updateState({ games: games, displayForm: false, editGame: false });\r\n        })\r\n}\r\n\r\nexport const deleteGame = (gameId, updateState) => {\r\n    swal.fire({\r\n        title: 'בטוח שברצונך למחוק את המשחק ואת כל השאלות',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'אישור',\r\n        cancelButtonText: 'ביטול',\r\n    }).then(res => {\r\n        if (res.isConfirmed === false) {\r\n            return;\r\n        } else {\r\n            axios.get(`${ApiUrl}/game/delete`, {\r\n                params: {\r\n                    gameId: gameId,\r\n                }\r\n            })\r\n                .then(res => {\r\n                    updateState({ games: res.data.games });\r\n                })\r\n        }\r\n    })\r\n}","C:\\projects\\react\\trivia\\client\\src\\api\\contact.js",[],"C:\\projects\\react\\trivia\\client\\src\\controlers\\Cedit.js",[],"C:\\projects\\react\\trivia\\client\\src\\controlers\\Cadmin.js",[],"C:\\projects\\react\\trivia\\client\\src\\controlers\\Cquestions.js",["145","146"],"import SAlert from \"./SAlert\"\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const getPlayerName = (gameId, updateState, stopFun) => {\r\n    Swal.fire({\r\n        title: 'לפני שמתחילים בואו נעשה הכרות',\r\n        html: `<div className=\"text-right\"><p >שם:</p></div><input type=\"text\" id=\"login\" className=\"swal2-input text-right\" placeholder=\"\">`,\r\n        confirmButtonText: 'המשך למשחק',\r\n        focusConfirm: false,\r\n        preConfirm: () => {\r\n        const login = Swal.getPopup().querySelector('#login').value\r\n        if (!login) {\r\n            Swal.showValidationMessage(`נא לכתוב שם`)\r\n        }\r\n        return { login: login}\r\n        }\r\n    }).then((result) => {\r\n        console.log(\"result from player details model\",result)\r\n        if(!result.value) return getPlayerName(gameId,updateState);\r\n        result.value.login && localStorage.setItem(gameId, result.value.login);\r\n        updateState({pName:result.value.login})\r\n        stopFun && stopFun();\r\n    })\r\n}\r\n\r\nexport const getPlayerDetails = (players, player_d, stopFun,updateState) => {\r\n    let playerDetails = {};\r\n    players.map(player => {\r\n        if (!player.name) return;\r\n        if (player.name === player_d){\r\n            const title = `שלום ${player_d}`;\r\n            const c_b_text = 'המשך למשחק';\r\n            const ic_html = '&#9787;';\r\n            playerDetails = {status: player.finish, q_over: player.q_over, is_player: true};\r\n            if(player.q_over.length > 0 && player.finish !== true){\r\n                let text =  'נראה שאתה באמצע משחק,\\nאז בא נמשיך מהשאלה שהיית בה,\\nעד כה צברת ' + Math.floor(player.points) + ' נקודות';\r\n                playerDetails = {...playerDetails, points: player.points, questionNum: player.q_over.length};\r\n                SAlert (title, text, '', 'question', stopFun, ic_html, c_b_text);\r\n            }\r\n            if(player.finish === true){\r\n                let text = `נראה שכבר סיימת את המשחק הזה, ואפילו צברת ${Math.floor(player.points)} נקודות, תוכל כמובן לשחק שוב אך הנקודות הפעם לא ייצברו לזכותך`;\r\n                SAlert (title, text, '', 'question', stopFun, ic_html, c_b_text);\r\n            }\r\n        } \r\n    })\r\n    console.log(\"playerDetails from model\",playerDetails)\r\n    updateState(playerDetails);\r\n}\r\n\r\nexport const clickNext = async(state, qNum, updateState, get_qustion) => {\r\n    let {questions,questionNum, live} = state;\r\n    if (questionNum < questions.length-1){\r\n        questionNum++;\r\n        !isNaN(qNum) && (questionNum = qNum);//במשחק לייב\r\n        await updateState({questionNum: questionNum, classAfter: ''})\r\n        get_qustion()\r\n    } \r\n    if (questionNum === questions.length-1 && !live){\r\n        document.getElementById(\"next\").style.display = \"none\";\r\n    }   \r\n}\r\n","C:\\projects\\react\\trivia\\client\\src\\components\\admin.game.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\admin.formGame.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\Socket.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\components\\score.jsx",["147","148","149"],"import { Component } from \"react\";\r\n//import { Questions } from \"./questions\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nclass Score extends Component {\r\n   \r\n    state = { \r\n        players: [''], \r\n        hige_score: {display: \"none\"}, \r\n        last_score: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getScore();\r\n        const score = setInterval(() => {\r\n            this.getScore();\r\n        },10000)\r\n        if(!this.props.mng ){ \r\n            clearInterval(score);\r\n        } else{\r\n            this.hige_score()\r\n        }\r\n    }\r\n\r\n    getScore = () => {\r\n        const {gameId} = this.props;\r\n        axios.get(`${apiUrl}/questions/get`,{\r\n            params:{\r\n                gameId: gameId\r\n            }\r\n        })\r\n        .then(res =>{\r\n            console.log('makescore');\r\n            var players = res.data.games[0].players;\r\n            var all_score = players.filter(player => player.points);\r\n            all_score.sort(function(a, b){return b.points - a.points})\r\n            const {questNum} = this.props;\r\n            var last_score = players.filter(player => (player.q_over[questNum] -5) > 0);\r\n            last_score.sort(function(a, b){return b.q_over[questNum] - a.q_over[questNum]})\r\n            console.log(last_score)\r\n            this.setState({players:all_score, last_score: last_score});\r\n        })\r\n    }\r\n\r\n    hige_score = () => {\r\n        const {hige_score} = this.state;\r\n        if(hige_score.display === 'none'){\r\n            this.setState({hige_score:{display: 'block'}});\r\n        } else{\r\n            this.setState({hige_score:{display: 'none'}});\r\n        }\r\n    }\r\n\r\n    makeTable = (list, from) => {\r\n        if(!list) return;\r\n        const self = this;\r\n        var {limit} = this.props;\r\n        return(\r\n            <table className=\"table table-bordered\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">מקום</th>\r\n                            <th scope=\"col\">שם</th>\r\n                            <th scope=\"col\">{from === 'last' ? 'שניות' : 'נקודות'}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {list.map(function(player, ind){\r\n                            if(ind > limit) return;\r\n                            if(!player.name) return;\r\n                            if(!self.props.mng && player.finish !== true) return;\r\n                            return (\r\n                                <tr key={ind}>\r\n                                    <td>{ind+1}</td>\r\n                                    <td>{player.name}</td>\r\n                                    <td>{from === 'last' ? Math.ceil(self.props.time - (player.q_over[self.props.questNum] - 5) / 0.0001) : Math.floor(player.points)}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n            </table>\r\n        )\r\n    }    \r\n\r\n    render() {\r\n        if(!this.state.players) return;\r\n       \r\n        return (\r\n            <div>\r\n                {!this.props.mng && <button onClick={this.hige_score} className=\"btn btn-success pl-4 pr-4 mb-3\">  הצג שיאנים </button>}\r\n                <div style={this.state.hige_score} className=\"the_table\">{this.makeTable(this.state.players)}</div> \r\n                {this.props.mng && <div className=\"the_table table_last\"><h3>שיאני השאלה הנוכחית</h3>{this.makeTable(this.state.last_score, 'last')}</div> }\r\n            </div> \r\n    );\r\n    }\r\n}\r\n \r\nexport default Score;","C:\\projects\\react\\trivia\\client\\src\\components\\inputs.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\controlers\\SAlert.jsx",[],"C:\\projects\\react\\trivia\\client\\src\\api\\apiUrl.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":12},{"ruleId":"154","severity":1,"message":"158","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":13},{"ruleId":"154","severity":1,"message":"159","line":6,"column":10,"nodeType":"156","messageId":"157","endLine":6,"endColumn":16},{"ruleId":"154","severity":1,"message":"160","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":29,"column":24,"nodeType":"163","messageId":"164","endLine":29,"endColumn":26},{"ruleId":"161","severity":1,"message":"165","line":30,"column":27,"nodeType":"166","messageId":"167","endLine":30,"endColumn":34},{"ruleId":"161","severity":1,"message":"168","line":70,"column":45,"nodeType":"166","messageId":"167","endLine":70,"endColumn":52},{"ruleId":"161","severity":1,"message":"168","line":71,"column":46,"nodeType":"166","messageId":"167","endLine":71,"endColumn":53},{"ruleId":"161","severity":1,"message":"168","line":72,"column":75,"nodeType":"166","messageId":"167","endLine":72,"endColumn":82},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'Swal' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'apiUrl' is defined but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Array.prototype.map() expects a return value from function.","no-global-assign","no-unsafe-negation"]